#!/usr/local/bin/perl

use warnings;
use strict;

use IO::All;
use Try::Tiny;

use PackageHandler;

# clean up system_data afrom previous executions
# obviously this step wouldn't be use in a real situation
unlink "./system_data";
unlink (
  "./package_data/TELNET",
  "./package_data/TCPIP",
  "./package_data/DNS",
  "./package_data/BROWSER",
);

my $input_file = $ARGV[0];
print "Must specify an input file\n" unless $input_file;

my @commands;
try {
  @commands = io($input_file)->slurp;
} catch {
  printf "Couldn't read input file: %s\n", $input_file;  
};

map { chomp } @commands;

foreach my $command (@commands) {
  print "$command\n";
  my @args = split /\s+/, $command;
  my $adjusted_args = { action => shift @args };
  $adjusted_args->{package} = shift @args if @args;
  $adjusted_args->{dependencies} = \@args if @args;
  my $handler = PackageHandler->new( $adjusted_args );
  $handler->route;
}

